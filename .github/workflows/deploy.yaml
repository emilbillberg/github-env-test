name: Deploy

on:
  push:
    branches: [main]

jobs:
  preparation:
    name: Preparation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Create image tag
        id: image_tag
        run: |
          ls -la
          sha=$(git rev-parse --short HEAD)
          ts=$(date +%s)
          echo "::set-output name=tag::${sha}-${ts}"
    outputs:
      tag: ${{ steps.image_tag.outputs.tag }}

  tests:
    name: Tests
    needs: [preparation]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Tests
        run: |
          ls -la
          echo Running tests!

  staging:
    name: Staging
    needs: [preparation, tests]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build & push
        run: |
          ls -la
          echo docker build  --build-arg GITHUB_TOKEN=$GITHUB_TOKEN -t $ECR_REGISTRY/$ECR_REPOSITORY:${{ needs.preparation.outputs.tag }} .
          echo docker push $ECR_REGISTRY/$ECR_REPOSITORY:${{ needs.preparation.outputs.tag }}

  production:
    name: Production
    needs: [preparation, staging]
    runs-on: ubuntu-latest
    environment: 
      name: production
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Pull & push
        run: |
          ls -la
          echo docker pull $ECR_REGISTRY/$ECR_REPOSITORY:${{ needs.preparation.outputs.tag }}
          echo docker tag $ECR_REGISTRY/$ECR_REPOSITORY:${{ needs.preparation.outputs.tag }} $ECR_REGISTRY/$ECR_REPOSITORY:prod-${{ needs.preparation.outputs.tag }}
          echo docker push $ECR_REGISTRY/$ECR_REPOSITORY:prod-${{ needs.preparation.outputs.tag }}